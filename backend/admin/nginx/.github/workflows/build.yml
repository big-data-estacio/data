name: Build and push imageðŸ“¦

on:
  workflow_dispatch:
  schedule:
  - cron: "30 0 * * *"
  push:
    branches: ["http3"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    if: github.actor == 'ammnt'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3.5.2

    - name: Install cosign
      if: github.event_name != 'pull_request'
      uses: sigstore/cosign-installer@v3.0.3

    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v2.5.0

    - name: Log into ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2.1.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Log into Docker Hub
      uses: docker/login-action@v2.1.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v4.4.0
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build the Docker image
      id: build
      uses: docker/build-push-action@v4.0.0
      with:
        provenance: false
        context: .
        platforms: linux/amd64
        load: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ steps.meta.outputs.tags }}
          ammnt/nginx:http3
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test the Docker image
      run: |
        docker run --name nginx --restart unless-stopped -p 127.0.0.1:8080:8080/tcp -d ammnt/nginx:http3
        curl -vki http://127.0.0.1:8080

    - name: Push the Docker image
      id: push
      uses: docker/build-push-action@v4.0.0
      with:
        provenance: false
        context: .
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ steps.meta.outputs.tags }}
          ammnt/nginx:http3
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Sign the published Docker image
      if: ${{ github.event_name != 'pull_request' }}
      env:
        COSIGN_EXPERIMENTAL: "true"
      run: |
        cosign sign -y \
          -a "repo=${{ github.repository }}" \
          -a "workflow=${{ github.workflow }}" \
          -a "ref=${{ github.sha }}" \
          ghcr.io/ammnt/nginx:@${{ steps.push.outputs.digest }}
        cosign sign -y \
          -a "repo=${{ github.repository }}" \
          -a "workflow=${{ github.workflow }}" \
          -a "ref=${{ github.sha }}" \
          ammnt/nginx:@${{ steps.push.outputs.digest }}

      #- name: Run deploy update on the server
      #  uses: appleboy/ssh-action@v0.1.10
      #  with:
      #    host: ${{ secrets.SERVER_HOST }}
      #    username: ${{ secrets.SERVER_USERNAME }}
      #    key: ${{ secrets.SERVER_KEY }}
      #    port: ${{ secrets.SERVER_PORT }}
      #    script: |
      #      docker-compose pull web
      #      docker-compose up -d web
